# User Service Docker Compose File
# Spring Boot Docker Compose Integration File for User Service
# Usage: Just run 'mvn spring-boot:run' or start Application class in IDE
# Spring Boot will automatically start these Docker services as dependencies

services:
  # Nacos MySQL (ARM64 support in 8.0+)
  nacos-mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=nacos_devtest
      - MYSQL_USER=nacos
      - MYSQL_PASSWORD=nacos
    ports:
      - "3307:3306"
    volumes:
      - nacos-mysql-data:/var/lib/mysql
      - ../docker/nacos/mysql:/docker-entrypoint-initdb.d
    restart: always

  # Nacos (官方ARM64支持版本)
  nacos:
    image: nacos/nacos-server:v2.4.0-slim
    environment:
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=nacos-mysql
      - MYSQL_SERVICE_DB_NAME=nacos_devtest
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=nacos
      - MYSQL_SERVICE_PASSWORD=nacos
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      - nacos-mysql
    restart: always

  # PostgreSQL (User Service database)
  postgres-user:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=petify_user
      - POSTGRES_USER=petify
      - POSTGRES_PASSWORD=petify123
    ports:
      - "5434:5432"  # Different port to avoid conflicts
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
      - ../docker/postgres/init-user.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  # Redis (共享缓存服务)
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass petify123 --protected-mode no
    volumes:
      - redis-data:/data
    restart: always

volumes:
  nacos-mysql-data:
  postgres-user-data:
  redis-data: